//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRUDWCFSOAP.WEB.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/CRUDWCFSOAP.WCF")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPerson", ReplyAction="http://tempuri.org/IService1/GetPersonResponse")]
        CRUDWCFSOAP.WEB.ServiceReference1.Person[] GetPerson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPerson", ReplyAction="http://tempuri.org/IService1/GetPersonResponse")]
        System.Threading.Tasks.Task<CRUDWCFSOAP.WEB.ServiceReference1.Person[]> GetPersonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertPerson", ReplyAction="http://tempuri.org/IService1/InsertPersonResponse")]
        void InsertPerson(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertPerson", ReplyAction="http://tempuri.org/IService1/InsertPersonResponse")]
        System.Threading.Tasks.Task InsertPersonAsync(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Updateperson", ReplyAction="http://tempuri.org/IService1/UpdatepersonResponse")]
        void Updateperson(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Updateperson", ReplyAction="http://tempuri.org/IService1/UpdatepersonResponse")]
        System.Threading.Tasks.Task UpdatepersonAsync(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deleteperson", ReplyAction="http://tempuri.org/IService1/DeletepersonResponse")]
        void Deleteperson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Deleteperson", ReplyAction="http://tempuri.org/IService1/DeletepersonResponse")]
        System.Threading.Tasks.Task DeletepersonAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CRUDWCFSOAP.WEB.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CRUDWCFSOAP.WEB.ServiceReference1.IService1>, CRUDWCFSOAP.WEB.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CRUDWCFSOAP.WEB.ServiceReference1.Person[] GetPerson() {
            return base.Channel.GetPerson();
        }
        
        public System.Threading.Tasks.Task<CRUDWCFSOAP.WEB.ServiceReference1.Person[]> GetPersonAsync() {
            return base.Channel.GetPersonAsync();
        }
        
        public void InsertPerson(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj) {
            base.Channel.InsertPerson(pobj);
        }
        
        public System.Threading.Tasks.Task InsertPersonAsync(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj) {
            return base.Channel.InsertPersonAsync(pobj);
        }
        
        public void Updateperson(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj) {
            base.Channel.Updateperson(pobj);
        }
        
        public System.Threading.Tasks.Task UpdatepersonAsync(CRUDWCFSOAP.WEB.ServiceReference1.Person pobj) {
            return base.Channel.UpdatepersonAsync(pobj);
        }
        
        public void Deleteperson(int id) {
            base.Channel.Deleteperson(id);
        }
        
        public System.Threading.Tasks.Task DeletepersonAsync(int id) {
            return base.Channel.DeletepersonAsync(id);
        }
    }
}
